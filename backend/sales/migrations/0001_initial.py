# Generated by Django 5.2.6 on 2025-09-05 12:28

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer_code', models.CharField(help_text='Unique short code for internal reference (e.g., CUST-001).', max_length=32, unique=True)),
                ('name', models.CharField(help_text='Customer legal/trade name shown on documents.', max_length=255)),
                ('contact_person', models.CharField(blank=True, help_text='Primary contact person for coordination.', max_length=100)),
                ('phone', models.CharField(blank=True, help_text='Customer phone number.', max_length=20, validators=[django.core.validators.RegexValidator(message='Enter a valid phone number (digits, +, -, space, parentheses).', regex='^[0-9+()\\-\\s]{6,20}$')])),
                ('email', models.EmailField(blank=True, help_text='Primary email address for communication.', max_length=254, validators=[django.core.validators.EmailValidator()])),
                ('billing_address', models.TextField(blank=True, help_text='Billing address used on invoices.')),
                ('shipping_address', models.TextField(blank=True, help_text='Shipping/delivery address.')),
                ('gstin', models.CharField(blank=True, help_text='GST identification number (India).', max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Enter a valid GSTIN (15 characters), e.g., 22AAAAA0000A1Z5.', regex='^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9A-Z]{1}$')])),
                ('state_code', models.CharField(blank=True, help_text='Two-digit GST state code (e.g., 29 = Karnataka).', max_length=2, validators=[django.core.validators.RegexValidator(message='Enter a valid 2-digit state code (e.g., 29 for Karnataka).', regex='^[0-9]{2}$')])),
                ('credit_limit', models.DecimalField(decimal_places=2, default=0, help_text='Maximum allowed outstanding balance.', max_digits=14, validators=[django.core.validators.MinValueValidator(0)])),
                ('payment_terms', models.PositiveIntegerField(default=0, help_text='Payment terms in days (e.g., 30 = Net 30).', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(3650)])),
                ('is_active', models.BooleanField(default=True, help_text='Uncheck to deactivate without deleting records.')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who initially created this record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)ss', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)ss', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
                'ordering': ('name',),
                'indexes': [models.Index(fields=['customer_code'], name='sales_custo_custome_c546c5_idx'), models.Index(fields=['name'], name='sales_custo_name_980413_idx')],
            },
        ),
    ]
